'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.matches = exports.getMessage = exports.checkHtmlElement = undefined;

var _redent = require('redent');

var _redent2 = _interopRequireDefault(_redent);

var _jestMatcherUtils = require('jest-matcher-utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getDisplayName(subject) {
  if (subject && subject.constructor) {
    return subject.constructor.name;
  } else {
    return typeof subject;
  }
}

function checkHtmlElement(htmlElement) {
  if (!(htmlElement instanceof HTMLElement)) {
    throw new Error(`The given subject is a ${getDisplayName(htmlElement)}, not an HTMLElement`);
  }
}

function getMessage(matcher, expectedLabel, expectedValue, receivedLabel, receivedValue) {
  return [`${matcher}\n`, `${expectedLabel}:\n${(0, _jestMatcherUtils.EXPECTED_COLOR)((0, _redent2.default)(expectedValue, 2))}`, `${receivedLabel}:\n${(0, _jestMatcherUtils.RECEIVED_COLOR)((0, _redent2.default)(receivedValue, 2))}`].join('\n');
}

function matches(textToMatch, node, matcher) {
  if (typeof matcher === 'string') {
    return textToMatch.toLowerCase().includes(matcher.toLowerCase());
  } else {
    return matcher.test(textToMatch);
  }
}

exports.checkHtmlElement = checkHtmlElement;
exports.getMessage = getMessage;
exports.matches = matches;